// a factory to generate a fnordometer : DLS 2015, Yegs, 2005
var Fnordometer = function(){
    var a = {};
    // our emotive group fantasy words
    a.fnords = {'hostile':true,'hostility':true,'destroy':true,'destroying':true,'destroyed':true,'destruction':true,'disintegrate':true,'disintegrating':true,'disintegrated':true,'weak':true,'weaken':true,'weakening':true,'weakness':true,'weakened':true,'calamity':true,'sacrifice':true,'sacrificing':true,'sacrifice':true,'birth':true,'rebirth':true,'eat':true,'eating':true,'eaten':true,'waste':true,'wasted':true,'wasting':true,'renew':true,'renewing':true,'renewed':true,'harm':true,'harming':true,'harmed':true,'injure':true,'injuring':true,'injurious':true,'injured':true,'freeze':true,'freezing':true,'exhaust':true,'exhaustion':true,'destroy':true,'destruction':true,'disasters':true,'disaster':true,'disastrous':true,'war':true,'burn':true,'burned':true,'burning':true,'fire':true,'blaze':true,'crisis':true,'aggression':true,'aggressive':true,'invasion':true,'invaded':true,'die':true,'dying':true,'stifling':true,'stifled':true,'suffer':true,'fear':true,'fears':true,'buildup':true,'blockade':true,'block':true,'blockage':true,'collapse':true,'collapsed':true,'fall':true,'buildup':true,'force':true,'forced':true,'forcing':true,'surge':true,'surging':true,'surged':true,'heart':true,'fight':true,'fighting':true,'fights':true,'cover':true,'covered':true,'covering':true,'threat':true,'threatening':true,'pressure':true,'pressures':true,'squeezed':true,'squeeze':true,'squeezing':true,'crush':true,'crushed':true,'crushing':true,'choke':true,'choked':true,'choking':true,'constraint':true,'constrained':true,'constrained':true,'burden':true,'burdening':true,'burdened':true,'shooting':true,'shoot':true,'shot':true,'dead':true,'death':true,'dying':true,'chaos':true,'chaotic':true,'menace':true,'menaced':true,'menacing':true,'violence':true,'bad':true,'evil':true,'insult':true,'insulting':true,'insulted':true,'anger':true,'angry':true,'angered':true,'resentment':true,'resent':true,'resenting':true,'frustration':true,'frustrated':true,'frustrating':true,'love':true,'loved':true,'loving':true,'resent':true,'resents':true,'resenting':true,'resented':true,'exhilaration':true,'exhilarated':true,'exhilarating':true,'exult':true,'tough':true,'tougher':true,'toughness':true,'toughening':true,'broke':true,'broken':true,'brake':true,'breaking':true,'strain':true,'strained':true,'straining':true,'strained':true,'sticky':true,'sticking':true,'dirt':true,'dirty':true,'filth':true,'filthy':true,'clean':true,'cleaning':true,'cleansing':true,'cleansed':true,'cleaned':true,'bury':true,'buried':true,'burying':true,'backbone':true,'cut':true,'cutting':true,'slash':true,'slashed':true,'slashing':true,'stab':true,'stabbed':true,'stabbing':true,'landslide':true,'watershed':true,'slip':true,'slippage':true,'slipping':true,'crack':true,'cracking':true,'cracked':true,'danger':true,'overstimulate':true,'boom':true,'pressure':true,'pressures':true,'ferocious':true,'happiness':true,'happy':true,'love':true,'loving':true,'loved':true,'hate':true,'hatred':true,'hating':true,'hated':true,'runaway':true,'bedrock':true,'cancer':true,'disease':true,'diseased':true,'sick':true,'sickness':true,'sickening':true,'sickened':true,'grow':true,'growing':true,'growth':true,'hot':true,'heat':true,'cool':true,'cold':true,'blow':true,'blowing':true,'blows':true,'bleeding':true,'bleed':true,'bled':true,'kill':true,'killing':true,'killed':true,'suck':true,'sucking':true,'suck':true,'fetus':true,'fetuses':true,'infant':true,'infants':true,'placenta':true,'womb':true,'birth':true,'birthing':true,'born':true,'child':true,'children':true,'grandchild':true,'grandchildren':true,'mother':true,'mothers':true,'father':true,'fathers':true,'grandmother':true,'grandmothers':true,'grandfather':true,'grandfathers':true,'brat':true,'brats':true,'bratty':true,'sewer':true,'sewers':true,'cespool':true,'cesspit':true,'poison':true,'poisoning':true,'poisoned':true,'disgust':true,'disgusting':true,'disgusted':true,'slice':true,'slicing':true,'sliced':true,'wound':true,'wounding':true,'wounded':true,'rage':true,'raging':true,'raged':true,'despair':true,'despairing':true,'despaired':true};
    // conjunctions, pronouns and other non-noun words
    a.notfnords = {'all':true,'another':true,'any':true,'anybody':true,'anyone':true,'anything':true,'both':true,'each':true,'either':true,'everybody':true,'everyone':true,'everything':true,'few':true,'he':true,'her':true,'hers':true,'herself':true,'him':true,'himself':true,'his':true,'I':true,'it':true,'its':true,'itself':true,'many':true,'me':true,'mine':true,'more':true,'most':true,'much':true,'my':true,'myself':true,'neither':true,'no one':true,'nobody':true,'none':true,'nothing':true,'one':true,'other':true,'others':true,'our':true,'ours':true,'ourselves':true,'several':true,'she':true,'some':true,'somebody':true,'someone':true,'something':true,'that':true,'their':true,'theirs':true,'them':true,'themselves':true,'these':true,'they':true,'this':true,'those':true,'us':true,'we':true,'what':true,'whatever':true,'which':true,'whichever':true,'who':true,'whoever':true,'whom':true,'whomever':true,'whose':true,'you':true,'your':true,'yours':true,'yourself':true,'yourselves':true,'a':true,'an':true,'the':true,'i':true,'and':true,'or':true,'not':true,'of':true,'to':true,'be':true,'is':true,'are':true,'was':true,'were':true,'in':true,'on':true,'as':true,'so':true,'with':true,'for':true,'by':true,'b':true,'c':true,'d':true,'e':true,'g':true,'h':true,'j':true,'k':true,'l':true,'m':true,'n':true,'o':true,'p':true,'q':true,'r':true,'s':true,'t':true,'u':true,'v':true,'w':true,'x':true,'y':true,'z':true,'one':true,'two':true,'three':true,'four':true,'five':true,'six':true,'seven':true,'eight':true,'nine':true,'ten':true,'hundred':true,'hundreds':true,'thousand':true,'thousands':true,'million':true,'millions':true,'billion':true,'billions':true,'trillion':true,'trillions':true};
    // the function for filtering and returning the analysis
    a.listFnordsinString =  function(s){
        var s = s.toLowerCase().split(/[\s\.,\!@\\\/]/gi); // split the input string, our sample text, into an array we can process
        // a dictionary of the fnords and thier frequencies.  we return this
        var r = { fnords:[], // a list of just the fnords contained in the text
                  counts:{}, // a dictionary of word:frequency
                  text:[] } ; // a list containing all fnords and nouns in the order they appeared
        for(w in s){
            if(this.fnords[w]){
                r.fnords.push(w); 
                r.counts[w] = r.counts[w] ? r.counts[w] + 1 : 1;
                r.text.push(w);
            }
            else if(!this.notfnords[w]) r.text.push(w);
        }
        return r;   
    }
    return a;
}


